<?xml version="1.0"?>

<project name="vzdncore" default="war" basedir=".">

	<!-- USER'S DEFINED PATH IS PICKED FROM THIS PROPERTY FILE -->
	<property file="${basedir}/../build.properties" />
	<property file="build.properties" />

	<property name="conf.dir" value="${basedir}/conf" />
	<property name="environment.dir" value="${conf.dir}/environment/${deploy.env}" />
	<property name="sso.environment.dir" value="${conf.dir}/environment/sso" />

	<property file="${environment.dir}/envProps.properties" />

	<property name="app.name" value="global" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="lib.dir" value="${basedir}/lib" />

	<property name="build.dir" value="${basedir}/build" />
	<property name="web.dir" value="${basedir}/web" />
	<property name="deploy.dir" value="${tomcat.base}/webapps" />
    
    <property name="additional.lib.dir" value="${basedir}/../lib" />
    
	<!-- =================================================================== -->
	<!-- Define all the required paths here                                  -->
	<!-- =================================================================== -->

	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${build.dir}/classes" />
	</path>

	<path id="additional.lib.dir.path">
		<fileset dir="${additional.lib.dir}/tomcat">
			<include name="*.jar" />
		</fileset>
	</path>
    

	<!-- =================================================================== -->
	<!-- Cleans up the current build                                         -->
	<!-- =================================================================== -->

	<target name="clean-local">
		<echo>Task for: ${deploy.env}</echo>
        <delete dir="${build.dir}" />
	</target>

	<!-- =================================================================== -->
	<!-- Compile the source                                                  -->
	<!-- =================================================================== -->

	<target name="compile">
		<mkdir dir="${build.dir}/classes" />
		<javac destdir="${build.dir}/classes" debug="on" deprecation="on">
			<src path="${src.dir}" />
			<classpath>
				<path refid="project.classpath" />
				<path refid="additional.lib.dir.path" />
			</classpath>
		</javac>

		<!-- Copy resources files to the classes folder -->
		<copy todir="${build.dir}/classes">
			<fileset dir="${environment.dir}" />
		</copy>
		
		<mkdir dir="${build.dir}/sso/classes" />
		<javac destdir="${build.dir}/sso/classes" debug="on" deprecation="on">
			<src path="${src.dir}" />
			<classpath>
				<path refid="project.classpath" />
				<path refid="additional.lib.dir.path" />
			</classpath>
		</javac>
		<copy todir="${build.dir}/sso/classes">
			<fileset dir="${sso.environment.dir}" />
		</copy>		
		
	</target>

	<!-- =================================================================== -->
	<!-- Package - create a war file                                         -->
	<!-- =================================================================== -->

	<target name="war" depends="clean-local,compile, sso-war" description="Package WAR">
		<war destfile="${build.dir}/${app.name}.war" webxml="${conf.dir}/web/web.xml">
			<fileset dir="${web.dir}" />
			<webinf dir="${conf.dir}/web" />			
			<classes dir="${build.dir}/classes" />
			<lib dir="${lib.dir}">
				<include name="*.jar" />
			</lib>
		</war>
        
        <!-- copy distributable WAR file  in our Builds Folder too for deployment to Production and staging-->
        <tstamp>
            <format property="backup_date" pattern="yyyy-MM-dd-HH-mm-ss" />
        </tstamp>
        <copy file="${basedir}/../Builds/${deploy.env}/${app.name}.war" tofile="${basedir}/../Builds/${deploy.env}/Archive/${backup_date}_${app.name}.war" failonerror="false"/>        
        <copy file="${build.dir}/${app.name}.war" todir="${basedir}/../Builds/${deploy.env}" overwrite="true" failonerror="false"/>
        
	</target>

	<target name="sso-war" depends="" description="Package SSO WAR">
		<war destfile="${build.dir}/sso/${app.name}.war" webxml="${conf.dir}/web/web.xml">
			<fileset dir="${web.dir}" />
			<webinf dir="${conf.dir}/web" />			
			<classes dir="${build.dir}/sso/classes" />
			<lib dir="${lib.dir}">
				<include name="*.jar" />
			</lib>
		</war>
        
        <!-- copy distributable WAR file  in our Builds Folder too for deployment to Production and staging-->
        <tstamp>
            <format property="backup_date" pattern="yyyy-MM-dd-HH-mm-ss" />
        </tstamp>
        <copy file="${basedir}/../Builds/sso/${app.name}.war" tofile="${basedir}/../Builds/sso/Archive/${backup_date}_${app.name}.war" failonerror="false"/>        
        <copy file="${build.dir}/sso/${app.name}.war" todir="${basedir}/../Builds/sso" overwrite="true" failonerror="false"/>
        
	</target>
	
    <!-- Clean Deployment Folder -->
    <target name="cleanDeployFolder">
        <delete dir="${deploy.dir}/${app.name}"/>    	
    </target>

	<!-- =================================================================== -->
	<!-- Deploy - Deploy to tomcat                                           -->
	<!-- =================================================================== -->

	<target name="deploy-war" depends="cleanDeployFolder">
		<copy file="${build.dir}/${app.name}.war" todir="${deploy.dir}" />
	</target>
    
    <!-- Shortcut to Deploy -->
    <target name="d" depends="deploy-war"/>
    
	<!-- =================================================================== -->
	<!--   Deploy to webapps dir                                             -->
	<!-- =================================================================== -->
	<target name="web">
		<copy todir="${deploy.dir}/${app.name}">
			<fileset dir="${web.dir}" />
		</copy>
	</target>
	
    <!-- ===================================================================== -->
	<!-- Compile the source directly to Tomcat Server - Makda                  -->
	<!-- ===================================================================== -->
	<target name="direct">
		<javac  destdir="${deploy.dir}/${app.name}/WEB-INF/classes" debug="on" deprecation="on">
	      <src path="${src.dir}"/>
	      <classpath>
	        <path refid="project.classpath"/>
	        <path refid="additional.lib.dir.path"/>
	      </classpath>
	    </javac>
	    <!-- Copy resources files to the classes folder -->
	    <copy todir="${deploy.dir}/${app.name}/WEB-INF/classes">
		  <fileset dir="${environment.dir}"/>
	    </copy>    
	</target>

	<!-- =================================================================== -->
	<!-- Help - Ant Tasks                                                    -->
	<!-- =================================================================== -->

	<target name="help">
		<echo message=" ****************************************************   " />
		<echo message="                   VZDN Header Help Menu                " />
		<echo message=" ****************************************************   " />
		<echo message="                                                        " />
		<echo message="                                                        " />
		<echo message=" ant help      - Shows this vzdn core ant help menu     " />
		<echo message=" ant web       - copy the web to tomcat                 " />
	</target>
</project>
