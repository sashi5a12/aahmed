<?xml version="1.0"?>

<project name="binary" default="tillPackage" basedir=".">

	<property file="${basedir}/../build.properties" />
    <property name="app.name" value="binary" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="src.dir" value="${basedir}/src" />
    <property name="etc.dir" value="${basedir}/etc" />
    <property name="aims.etc.dir" value="${basedir}/../etc" />
    <property name="web.dir" value="${basedir}/webpages" />
    <property name="deploy.dir" value="${tomcat.home}/webapps" />

    <!-- =================================================================== -->
    <!-- Define all the required paths here                                                      -->
    <!-- =================================================================== -->

    <path id="app.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
        <pathelement location="${build.dir}/classes" />
    </path>

    <path id="tomcat.classpath">
        <fileset dir="${tomcat.home}/lib">
            <include name="servlet-api.jar" />
            <include name="jsp-api.jar" />
        </fileset>
    </path>

    
    <!-- =================================================================== -->
    <!-- Setting the Environment                                         -->
    <!-- =================================================================== -->
        
    <target name="setEnvironment">
        <!-- Properties are immutable: whoever sets a property first freezes it for the rest of the build;-->
        <!-- Property "environment.dir" will already be set if "ant stage" OR "ant prod" is called first-->
        <property name="environment.dir" value="${aims.etc.dir}/environment/dev"/>
   </target>

    <!-- =================================================================== -->
    <!-- Cleans up the current build                                                                                       -->
    <!-- =================================================================== -->
    <target name="clean">
        <delete dir="${build.dir}" />
    </target>

    <!-- =================================================================== -->
    <!-- CleanRemote - Cleans up Deploy Dir.                                                                     -->
    <!-- =================================================================== -->
    <target name="cleanRemote">
        <delete dir="${deploy.dir}/${app.name}" />
    </target>

    <!-- =================================================================== -->
    <!-- initialize the current build                                                                                       -->
    <!-- =================================================================== -->

    <target name="init" depends="clean">
        <mkdir dir="${build.dir}/WEB-INF/classes" />
    </target>

    <!-- =================================================================== -->
    <!-- Compile the source                                                                                                             -->
    <!-- =================================================================== -->

    <target name="compile" depends="init">
        <javac destdir="${build.dir}/WEB-INF/classes" debug="on" deprecation="on">
            <src path="${src.dir}" />
            <classpath>
                <path refid="app.classpath" />
                <path refid="tomcat.classpath" />
            </classpath>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!--Copy resources                                                                                                          -->
    <!-- =================================================================== -->

    <target name="copy" depends="compile">

        <!-- Copy resources files to the classes folder -->
        <copy todir="${build.dir}/WEB-INF/classes">
            <fileset dir="${environment.dir}" />
        </copy>

        <!-- Copy web.xml  to the web-inf folder -->
        <copy todir="${build.dir}/WEB-INF">
            <fileset file="${etc.dir}/web.xml" />
        </copy>
        
        <!-- Copy log4j.properties  to the classes folder -->
        <copy todir="${build.dir}/WEB-INF/classes">
            <fileset file="${etc.dir}/log4j.properties" />
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Package - create a war file                                                                                    -->
    <!-- =================================================================== -->
    <target name="war" depends="copy" description="Package WAR">
        <war destfile="${build.dir}/${app.name}.war" webxml="${build.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}/jsp" />
            <classes dir="${build.dir}/WEB-INF/classes" />
            <lib dir="${lib.dir}">
                <include name="*.jar" />
                <include name="*.zip" />
            </lib>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Deploy - Deploy to ant dir                                                                                             -->
    <!-- =================================================================== -->
    <target name="deploy">
        <copy file="${build.dir}/${app.name}.war" todir="${deploy.dir}" />
    </target>

  
  <!-- =================================================================== -->
  <!-- TillPackage - Everything except deploy. No need to bring down tomcat-->
  <!-- =================================================================== -->

  <target name="tillPackage" depends="setEnvironment,war" />
  <target name="p" depends="tillPackage"/>
        
  <!-- =================================================================== -->
  <!-- OnlyDeploy - Only Deploy. Run after 'TillPackage'                   -->
  <!-- =================================================================== -->

  <target name="onlyDeploy" depends="cleanRemote, deploy" />
  <target name="d" depends="onlyDeploy"/>
 
    
    <!-- =================================================================== -->
    <!-- Compile the source directly to Tomcat Server 																							   				-->
    <!-- =================================================================== -->
    <target name="direct">
        <javac destdir="${deploy.dir}/${app.name}/WEB-INF/classes" debug="on" deprecation="on">
            <src path="${src.dir}" />
            <classpath>
                <path refid="aims.classpath" />
                <path refid="tomcat.classpath" />
            </classpath>
        </javac>

        <!-- Copy resources files to the classes folder -->
        <copy todir="${deploy.dir}/${app.name}/WEB-INF/classes">
            <fileset dir="${aims.etc.dir}/environment/dev"/>
        </copy>
        <!-- Copy web.xml  to the web-inf folder -->
        <copy todir="${deploy.dir}/${app.name}/WEB-INF">
            <fileset file="${etc.dir}/web.xml" />
        </copy>

    </target>
    
    <!-- =================================================================== -->
    <!-- Used for creating a Package in Staging Environment                   -->
    <!-- =================================================================== -->

    <target name="StagingPackage">
        <property name="environment.dir" value="${aims.etc.dir}/environment/stage"/>
        <antcall target="tillPackage"/>
    </target>
    <target name="stage" depends="StagingPackage"/>

    <!-- =================================================================== -->
    <!-- Used for creating a Package in Production Environment                   -->
    <!-- =================================================================== -->

    <target name="ProductionPackage">
        <property name="environment.dir" value="${aims.etc.dir}/environment/prod"/>
        <antcall target="tillPackage"/>
    </target>
    <target name="prod" depends="ProductionPackage"/>

    <!-- =================================================================== -->
    <!-- Help - Ant Task																																						  -->
    <!-- =================================================================== -->
    <target name="help">
        <echo message=" ****************************************************   " />
        <echo message="                   VZWBINARY Help Menu                    								 " />
        <echo message=" ****************************************************   " />
        <echo message="                                                        " />
        <echo message="                                                        " />
        <echo message=" ant help			- Shows this VZWBINARY ant help menu       " />
        <echo message=" ant clean		- Cleans the build and Tomcat webapps dir          " />
        <echo message=" ant compile	- Compiles all the file          " />
        <echo message=" ant direct		- Compiles all the file and copy directly to Tomcat server.          " />
        <echo message=" ant war			- Package the project in a war file            " />
        <echo message=" ant deploy		- Deploy the packed war to Tomcat              " />
        <echo message=" ant StagingPackage - Calls 'tillPackage' but with Staging Environment Properties File."/>
        <echo message=" ant ProductionPackage - Calls 'tillPackage' but with Production Environment Properties File."/>
        <echo message=" ant					- default task of clean, init,   war, compile, copy, war, cleanRemote, deploy           " />
        <echo message="                      "/>
        <echo message=" ********Short Cuts********"/>
        <echo message="                      "/>
        <echo message=" ant p           - shortcut for target 'tillPackage'"/>
        <echo message=" ant d           - shortcut for target 'onlyDeploy'"/>
        <echo message=" ant stage           - shortcut for target 'StagingPackage'"/>
        <echo message=" ant prod           - shortcut for target 'ProductionPackage'"/>        
        <echo message="                      "/>
        
    </target>

</project>
