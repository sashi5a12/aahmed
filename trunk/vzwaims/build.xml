<?xml version="1.0"?>

<project name="aims" default="tillPackage" basedir=".">

  <!-- USER'S DEFINED PATH IS PICKED FROM THIS PROPERTY FILE -->
    <property file="build.properties" />
    <property name="app.name" value="aims" />
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="src.dir" value="${basedir}/src"/> 
    <property name="etc.dir" value="${basedir}/etc"/>
    <property name="web.dir" value="${basedir}/webpages"/>
    <property name="deploy.dir" value="${tomcat.home}/webapps"/>
    <property name="scripts.dir" value="${etc.dir}/scripts"/>
    <import file="contextFile.xml"/>

    <!-- =================================================================== -->
    <!-- Define all the required paths here                                  -->
    <!-- =================================================================== -->
  
    <path id="xdoclet.classpath">
        <fileset dir="${lib.dir}/xdoclet">
            <include name="*.jar"/>
        </fileset>
    </path>
  
    <path id="aims.classpath">
        <fileset dir="${lib.dir}">
            <include name="axis2/*.jar"/>
            <include name="webservices/*.jar"/>
            <include name="xmlrpc/*.jar"/>
            <include name="poi/*.jar"/>
            <include name="struts/*.jar"/>
            <include name="hibernate/*.jar"/>
            <include name="jars/amclientsdk.jar"/>
            <include name="mail/*.jar"/>
            <include name="jdbc/*.jar"/>
            <include name="**/*.zip"/>
            <include name="**/iText*.jar"/>
            <include name="**/joda-time-1.3.jar"/>
            <include name="jars/ftps.jar"/>
            <include name="jars/FCKeditor*.jar"/>
            <include name="jars/commons-lang-2.4.jar"/>
            <include name="htmlparser/*.jar"/>
            <include name="**/bsh*.jar"/>
            <include name="**/oscore*.jar"/>
            <include name="**/osworkflow*.jar"/>
            <include name="**/propertyset*.jar"/>
        </fileset>
        <pathelement location="${build.dir}/classes" />
    </path>
  
    <path id="tomcat.classpath">
        <fileset dir="${tomcat.home}/lib">
            <include name="servlet-api.jar"/>
            <include name="jsp-api.jar"/>
        </fileset>
    </path>

    <taskdef name="hbm2java"
        classname="net.sf.hibernate.tool.hbm2java.Hbm2JavaTask"
        classpathref="aims.classpath"/>


    <!-- =================================================================== -->
    <!-- Loading the Environmental Properties File                                         -->
    <!-- =================================================================== -->
        
    <target name="loadEnvPropertyFile">
        <!-- Properties are immutable: whoever sets a property first freezes it for the rest of the build;-->
        <!-- Property "environment.dir" will already be set if "ant stage" OR "ant prod" is called first-->
        <property name="environment.dir" value="${etc.dir}/environment/dev"/>
        <property file="${environment.dir}/envProps.properties" />
   </target>

    <!-- =================================================================== -->
    <!-- Cleans up the current build                                         -->
    <!-- =================================================================== -->
    
    <target name="clean" >
        <delete dir="${build.dir}"/>
        <delete dir="${deploy.dir}/${app.name}"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- CleanLocal - Cleans up the current build                            -->
    <!-- =================================================================== -->

    <target name="cleanLocal">
        <delete dir="${build.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- CleanRemote - Cleans up Deploy Dir.                                 -->
    <!-- =================================================================== -->

    <target name="cleanRemote">
        <delete dir="${deploy.dir}/${app.name}"/>
        <delete file="${tomcat.home}/conf/Catalina/localhost/aims.xml"/>
    </target>

    <!-- ========================================================================== -->
    <!--                         Generate ValueObjects                              -->
    <!-- ========================================================================== -->
    
    <target name="hbm2java" description="Generate .java from .hbm files.">
        <hbm2java config="${etc.dir}/metadata/hibernate/hibernate.cfg.xml"
            output="${src.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </hbm2java>
    </target>

    <!-- =================================================================== -->
    <!-- Compile the source                                                  -->
    <!-- =================================================================== -->
    
    <target name="compile">
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/WEB-INF"/>
        <javac  destdir="${build.dir}/classes" debug="on" deprecation="on">
            <src path="${src.dir}"/>
            <classpath>
                <path refid="aims.classpath"/>
                <path refid="tomcat.classpath"/>
            </classpath>
        </javac>
    
        <!-- Copy resources files to the classes folder -->
        <copy todir="${build.dir}/classes">
            <fileset dir="${web.dir}/res"/>
            <fileset dir="${environment.dir}"/>
            <fileset dir="${etc.dir}/environment/common"></fileset>
            <fileset dir="${etc.dir}/metadata/osworkflow"/>
        </copy>
    
        <!-- Copy hbm files to the classes folder -->
        <copy todir="${build.dir}/classes">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>
    </target>

    
    <!-- =================================================================== -->
    <!-- XDoclet - Run the WebDocletTask                                     -->
    <!-- =================================================================== -->
    
    <target name="webdoclet">
        <mkdir dir="${build.dir}/WEB-INF"/>
        <taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
            <classpath>
                <path refid="xdoclet.classpath"/>
                <path refid="aims.classpath"/>
                <path refid="tomcat.classpath"/>
            </classpath>
        </taskdef>
        <webdoclet destdir="${build.dir}/WEB-INF" verbose="true" 
            force="${xdoclet.force}"
            mergedir="${etc.dir}/metadata">
            <fileset dir="${src.dir}"/>
            
            <strutsconfigxml validatexml="true"
                version="1.1"
                mergedir="${etc.dir}/metadata/struts"
            />            
        </webdoclet>
    </target>

    <!-- =================================================================== -->
    <!-- Package - create a war file                                         -->
    <!-- =================================================================== -->

    <target name="package" depends="compile,webdoclet" description="Package WAR">
        <war destfile="${build.dir}/${app.name}.war" webxml="${etc.dir}/metadata/web/web.xml">
            <fileset dir="webpages"/>
            <fileset dir="${web.dir}/jsp"/>
            <webinf dir="${etc.dir}/metadata/struts" includes="*.tld,*.dtd"/>
            <webinf dir="${etc.dir}/metadata/web" includes="*.tld,*.dtd"/>
            <webinf dir="${etc.dir}/metadata/struts" includes="validat*.xml"/>
            <webinf dir="${etc.dir}/metadata/struts" includes="tiles-config.xml"/>
            <webinf dir="${etc.dir}/metadata/hibernate" includes="hibernate.cfg.xml"/>
            <webinf dir="${scripts.dir}" includes="standalonebuild.xml"/>  
            <webinf dir="${build.dir}/WEB-INF" excludes="web.xml"/>
            <classes dir="${build.dir}/classes"/>            
            <lib dir="${lib.dir}/jars">
                <include name="**/*.jar"/>
                <include name="**/*.zip"/>
            </lib>
            <lib dir="${lib.dir}/htmlparser">
                <include name="*.jar"/>
            </lib>
            <lib dir="${lib.dir}/axis2">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="${lib.dir}/FCKeditor">
                <include name="**/*.jar"/>
            </lib>
            <lib dir="${lib.dir}/webservices">
                <include name="xalan.jar"/>
            </lib>
            <lib dir="${lib.dir}/xmlrpc/">
                <include name="*.jar"/>
            </lib>
        </war>
    </target>
   
    <!-- =================================================================== -->
    <!-- Deploy - deploy a war file                                         -->
    <!-- =================================================================== -->

    <target name="deploy" >
        <copy file="${build.dir}/${app.name}.war" todir="${deploy.dir}" />
        <copy file="${build.dir}/aims.xml" todir="${tomcat.home}/conf/Catalina/localhost" />
    </target>
    
    <!-- =================================================================== -->
    <!-- TillPackage - Everything except deploy. No need to bring down tomcat-->
    <!-- =================================================================== -->

    <target name="tillPackage" depends="loadEnvPropertyFile,cleanLocal,hbm2java,package,generateContextFile"/>
    <target name="p" depends="tillPackage"/>

    <!-- =================================================================== -->
    <!-- OnlyDeploy - Only Deploy. Run after 'TillPackage'                   -->
    <!-- =================================================================== -->

    <target name="onlyDeploy" depends="cleanRemote,deploy"/>
    <target name="d" depends="onlyDeploy"/>

    <!-- =================================================================== -->
    <!-- Used for creating a Package in Staging Environment                   -->
    <!-- =================================================================== -->

    <target name="StagingPackage">
        <property name="environment.dir" value="${etc.dir}/environment/stage"/>
        <antcall target="tillPackage"/>
    </target>
    <target name="stage" depends="StagingPackage"/>

    <!-- =================================================================== -->
    <!-- Used for creating a Package in Production Environment                   -->
    <!-- =================================================================== -->

    <target name="ProductionPackage">
        <property name="environment.dir" value="${etc.dir}/environment/prod"/>
        <antcall target="tillPackage"/>
    </target>
    <target name="prod" depends="ProductionPackage"/>
    
    
    <!-- =================================================================== -->
    <!-- Help - Ant Tasks                                                    -->
    <!-- =================================================================== -->
    
    <target name="help">
        <echo message=" ****************************************************   "/>
        <echo message="                   VZWAIMS Help Menu                    "/>
        <echo message=" ****************************************************   "/>
        <echo message="                                                        "/>
        <echo message="                                                        "/>
        <echo message=" ant help        - Shows this VZWAIMS ant help menu"/>
        <echo message=" ant clean       - Cleans the build and Tomcat webapps dir"/>
        <echo message=" ant tillPackage - (DEFAULT) - cleanLocal,compile,package and generate Context File. This way no need to bring down tomcat"/>
        <echo message=" ant onlyDeploy  - cleanRemote,deploy. Run after target 'tillPackage'"/>
        <echo message=" ant StagingPackage - Calls 'tillPackage' but with Staging Environment Properties File."/>
        <echo message=" ant ProductionPackage - Calls 'tillPackage' but with Production Environment Properties File."/>
        <echo message="                      "/>
        <echo message=" ********Short Cuts********"/>
        <echo message="                      "/>
        <echo message=" ant p           - shortcut for target 'tillPackage'"/>
        <echo message=" ant d           - shortcut for target 'onlyDeploy'"/>
        <echo message=" ant stage           - shortcut for target 'StagingPackage'"/>
        <echo message=" ant prod           - shortcut for target 'ProductionPackage'"/>        
        <echo message="                      "/>
        <echo message=" ********MISC********"/>
        <echo message="                      "/>
        <echo message=" ant all         - Calls 'tillPackage' and 'onlyDeploy'"/>
        <echo message=" ant direct      - Compiles all the file and copy directly to Tomcat server."/>
        <echo message=" ant web         - copy the webpages dir to tomcat deploy"/>
    </target>


    <!-- ===================================================================== -->
    <!-- START OF MISC TARGETS                  -->
    <!-- ===================================================================== -->

    <target name="all" depends="p,d"/>
    
    <!-- ===================================================================== -->
    <!-- Compile the source directly to Tomcat Server                  -->
    <!-- ===================================================================== -->
    <target name="direct">
        <javac  destdir="${deploy.dir}/aims/WEB-INF/classes" debug="on" deprecation="on">
            <src path="${src.dir}"/>
            <classpath>
                <path refid="aims.classpath"/>
                <path refid="tomcat.classpath"/>
            </classpath>
        </javac>
        <!-- Copy resources files to the classes folder -->
        <copy todir="${deploy.dir}/aims/WEB-INF/classes">
            <fileset dir="${web.dir}/res"/>
            <fileset dir="${etc.dir}/environment/dev"/>
            <fileset dir="${etc.dir}/environment/common"></fileset> 	
            <fileset dir="${etc.dir}/metadata/osworkflow"/> 	
        </copy>    
    </target>

    <!-- =================================================================== -->
    <!--   Deploy to webapps dir                                             -->
    <!-- =================================================================== -->
    <target name="web" >
        <copy todir="${deploy.dir}/${app.name}" >
        <fileset dir="webpages"/>
        <fileset dir="${web.dir}/jsp"/>
        </copy>
    </target>

</project>
